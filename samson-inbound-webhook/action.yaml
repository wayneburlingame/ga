name: Samson inbound webhook
author: Peter Mescalchin
description: Send inbound webhook notifications to a Samson server
inputs:
  branch:
    description: Branch name for commit
    default:
    required: false
  message:
    description: Custom message for webhook call
    default: Triggered by zendesk/ga/samson-inbound-webhook
    required: false
  webhook-url:
    description: Samson generic webhook URL
    required: true
outputs:
  response:
    description: The response from the webhook
    value: ${{ steps.request.outputs.response }}
runs:
  using: composite
  steps:
    - id: request
      run: |
        # validate webhook URL
        if [[ ! "${{ inputs.webhook-url }}" =~ ^https://[^/]+/integrations/generic/[a-f0-9]{32}$ ]]; then
          echo "::error::Invalid Samson generic webhook URL format"
          exit 1
        fi

        # determine target branch name
        branchName="${{ inputs.branch }}"
        if [[ -z $branchName ]]; then
          # extract branch name (either pull request head or workflow trigger)
          branchName="${{ github.head_ref }}"
          if [[ -z $branchName ]]; then
            # not a pull request workflow run
            branchName="${{ github.ref }}"
            branchName=${branchName/refs\/heads\/}
          fi
        fi

        # call webhook
        payload=$(jq \
          --arg branchName "$branchName" \
          --arg message "${{ inputs.message }}" \
          --arg sha "${{ github.sha }}" \
          --compact-output \
          --null-input \
            '{deploy: {branch: $branchName,commit: {message: $message,sha: $sha}}}'
        )

        response=$(curl \
          --data "$payload" \
          --header "Content-Type: application/json" \
          --request POST \
          --silent \
            "${{ inputs.webhook-url }}"
        )

        version=$(echo "$response" | jq .release.number)

        echo "$response"
        echo "::set-output name=next_version::$(echo $version)"
        echo "::set-output name=previous_version::$(expr $version - 1)"
        echo "::set-output name=response::$(echo $response)"
      shell: bash
